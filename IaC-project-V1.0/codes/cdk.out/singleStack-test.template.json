{
 "Resources": {
  "WebServerVpcA0C9DFE71": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.10.10.0/24",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "singleStack-test/WebServerVpcA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/WebServerVpcA/Resource"
   }
  },
  "WebServerVpcApublicSubnet1SubnetC50EEEC8": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "WebServerVpcA0C9DFE71"
    },
    "AvailabilityZone": "eu-central-1a",
    "CidrBlock": "10.10.10.0/25",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "singleStack-test/WebServerVpcA/publicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/WebServerVpcA/publicSubnet1/Subnet"
   }
  },
  "WebServerVpcApublicSubnet1RouteTable273F23E7": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "WebServerVpcA0C9DFE71"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "singleStack-test/WebServerVpcA/publicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/WebServerVpcA/publicSubnet1/RouteTable"
   }
  },
  "WebServerVpcApublicSubnet1RouteTableAssociationD94FDF94": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "WebServerVpcApublicSubnet1RouteTable273F23E7"
    },
    "SubnetId": {
     "Ref": "WebServerVpcApublicSubnet1SubnetC50EEEC8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/WebServerVpcA/publicSubnet1/RouteTableAssociation"
   }
  },
  "WebServerVpcApublicSubnet1DefaultRouteA52A7221": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "WebServerVpcApublicSubnet1RouteTable273F23E7"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "WebServerVpcAIGW4DC1818D"
    }
   },
   "DependsOn": [
    "WebServerVpcAVPCGW6EA4A382"
   ],
   "Metadata": {
    "aws:cdk:path": "singleStack-test/WebServerVpcA/publicSubnet1/DefaultRoute"
   }
  },
  "WebServerVpcApublicSubnet2SubnetDE4350BF": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "WebServerVpcA0C9DFE71"
    },
    "AvailabilityZone": "eu-central-1b",
    "CidrBlock": "10.10.10.128/25",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "singleStack-test/WebServerVpcA/publicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/WebServerVpcA/publicSubnet2/Subnet"
   }
  },
  "WebServerVpcApublicSubnet2RouteTableA448F9FC": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "WebServerVpcA0C9DFE71"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "singleStack-test/WebServerVpcA/publicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/WebServerVpcA/publicSubnet2/RouteTable"
   }
  },
  "WebServerVpcApublicSubnet2RouteTableAssociation93936CE9": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "WebServerVpcApublicSubnet2RouteTableA448F9FC"
    },
    "SubnetId": {
     "Ref": "WebServerVpcApublicSubnet2SubnetDE4350BF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/WebServerVpcA/publicSubnet2/RouteTableAssociation"
   }
  },
  "WebServerVpcApublicSubnet2DefaultRoute656ACD92": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "WebServerVpcApublicSubnet2RouteTableA448F9FC"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "WebServerVpcAIGW4DC1818D"
    }
   },
   "DependsOn": [
    "WebServerVpcAVPCGW6EA4A382"
   ],
   "Metadata": {
    "aws:cdk:path": "singleStack-test/WebServerVpcA/publicSubnet2/DefaultRoute"
   }
  },
  "WebServerVpcAIGW4DC1818D": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "singleStack-test/WebServerVpcA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/WebServerVpcA/IGW"
   }
  },
  "WebServerVpcAVPCGW6EA4A382": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "VpcId": {
     "Ref": "WebServerVpcA0C9DFE71"
    },
    "InternetGatewayId": {
     "Ref": "WebServerVpcAIGW4DC1818D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/WebServerVpcA/VPCGW"
   }
  },
  "AdminServerVpcBECDD3418": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.20.20.0/24",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "singleStack-test/AdminServerVpcB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/AdminServerVpcB/Resource"
   }
  },
  "AdminServerVpcBpublicSubnet1SubnetD4B59ECB": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "AdminServerVpcBECDD3418"
    },
    "AvailabilityZone": "eu-central-1a",
    "CidrBlock": "10.20.20.0/25",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "singleStack-test/AdminServerVpcB/publicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/AdminServerVpcB/publicSubnet1/Subnet"
   }
  },
  "AdminServerVpcBpublicSubnet1RouteTable5F60EE9C": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "AdminServerVpcBECDD3418"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "singleStack-test/AdminServerVpcB/publicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/AdminServerVpcB/publicSubnet1/RouteTable"
   }
  },
  "AdminServerVpcBpublicSubnet1RouteTableAssociationB9A9EE57": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "AdminServerVpcBpublicSubnet1RouteTable5F60EE9C"
    },
    "SubnetId": {
     "Ref": "AdminServerVpcBpublicSubnet1SubnetD4B59ECB"
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/AdminServerVpcB/publicSubnet1/RouteTableAssociation"
   }
  },
  "AdminServerVpcBpublicSubnet1DefaultRouteBFB77452": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "AdminServerVpcBpublicSubnet1RouteTable5F60EE9C"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "AdminServerVpcBIGW3AD4C0DD"
    }
   },
   "DependsOn": [
    "AdminServerVpcBVPCGWC0E90D39"
   ],
   "Metadata": {
    "aws:cdk:path": "singleStack-test/AdminServerVpcB/publicSubnet1/DefaultRoute"
   }
  },
  "AdminServerVpcBpublicSubnet2Subnet2ECB0AB3": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "AdminServerVpcBECDD3418"
    },
    "AvailabilityZone": "eu-central-1b",
    "CidrBlock": "10.20.20.128/25",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "singleStack-test/AdminServerVpcB/publicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/AdminServerVpcB/publicSubnet2/Subnet"
   }
  },
  "AdminServerVpcBpublicSubnet2RouteTable552E22BD": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "AdminServerVpcBECDD3418"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "singleStack-test/AdminServerVpcB/publicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/AdminServerVpcB/publicSubnet2/RouteTable"
   }
  },
  "AdminServerVpcBpublicSubnet2RouteTableAssociation05A41CE5": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "AdminServerVpcBpublicSubnet2RouteTable552E22BD"
    },
    "SubnetId": {
     "Ref": "AdminServerVpcBpublicSubnet2Subnet2ECB0AB3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/AdminServerVpcB/publicSubnet2/RouteTableAssociation"
   }
  },
  "AdminServerVpcBpublicSubnet2DefaultRouteCA04D799": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "AdminServerVpcBpublicSubnet2RouteTable552E22BD"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "AdminServerVpcBIGW3AD4C0DD"
    }
   },
   "DependsOn": [
    "AdminServerVpcBVPCGWC0E90D39"
   ],
   "Metadata": {
    "aws:cdk:path": "singleStack-test/AdminServerVpcB/publicSubnet2/DefaultRoute"
   }
  },
  "AdminServerVpcBIGW3AD4C0DD": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "singleStack-test/AdminServerVpcB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/AdminServerVpcB/IGW"
   }
  },
  "AdminServerVpcBVPCGWC0E90D39": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "VpcId": {
     "Ref": "AdminServerVpcBECDD3418"
    },
    "InternetGatewayId": {
     "Ref": "AdminServerVpcBIGW3AD4C0DD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/AdminServerVpcB/VPCGW"
   }
  },
  "WebSeverNetworkAcl8238AD6E": {
   "Type": "AWS::EC2::NetworkAcl",
   "Properties": {
    "VpcId": {
     "Ref": "WebServerVpcA0C9DFE71"
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/WebSeverNetworkAcl/Resource"
   }
  },
  "WebSeverNetworkAclDefaultAssociationsingleStacktestWebServerVpcApublicSubnet1440C3E074BCE4BFD": {
   "Type": "AWS::EC2::SubnetNetworkAclAssociation",
   "Properties": {
    "NetworkAclId": {
     "Ref": "WebSeverNetworkAcl8238AD6E"
    },
    "SubnetId": {
     "Ref": "WebServerVpcApublicSubnet1SubnetC50EEEC8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/WebSeverNetworkAcl/DefaultAssociationsingleStacktestWebServerVpcApublicSubnet1440C3E07/Resource"
   }
  },
  "WebSeverNetworkAclDefaultAssociationsingleStacktestWebServerVpcApublicSubnet20CD95BAD1EA1735F": {
   "Type": "AWS::EC2::SubnetNetworkAclAssociation",
   "Properties": {
    "NetworkAclId": {
     "Ref": "WebSeverNetworkAcl8238AD6E"
    },
    "SubnetId": {
     "Ref": "WebServerVpcApublicSubnet2SubnetDE4350BF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/WebSeverNetworkAcl/DefaultAssociationsingleStacktestWebServerVpcApublicSubnet20CD95BAD/Resource"
   }
  },
  "WebSeverNetworkAclAllowHttpIngressTrafficToWebServerB8DFF3C1": {
   "Type": "AWS::EC2::NetworkAclEntry",
   "Properties": {
    "NetworkAclId": {
     "Ref": "WebSeverNetworkAcl8238AD6E"
    },
    "Protocol": 6,
    "RuleAction": "allow",
    "RuleNumber": 100,
    "CidrBlock": "0.0.0.0/0",
    "Egress": false,
    "PortRange": {
     "From": 80,
     "To": 80
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/WebSeverNetworkAcl/AllowHttpIngressTrafficToWebServer/Resource"
   }
  },
  "WebSeverNetworkAclAllowHttpsIngressTrafficToWebServerE8088C6E": {
   "Type": "AWS::EC2::NetworkAclEntry",
   "Properties": {
    "NetworkAclId": {
     "Ref": "WebSeverNetworkAcl8238AD6E"
    },
    "Protocol": 6,
    "RuleAction": "allow",
    "RuleNumber": 110,
    "CidrBlock": "0.0.0.0/0",
    "Egress": false,
    "PortRange": {
     "From": 443,
     "To": 443
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/WebSeverNetworkAcl/AllowHttpsIngressTrafficToWebServer/Resource"
   }
  },
  "WebSeverNetworkAclAllowEphemeralEgressResponseTrafficFromWebServer864AE11F": {
   "Type": "AWS::EC2::NetworkAclEntry",
   "Properties": {
    "NetworkAclId": {
     "Ref": "WebSeverNetworkAcl8238AD6E"
    },
    "Protocol": 6,
    "RuleAction": "allow",
    "RuleNumber": 110,
    "CidrBlock": "0.0.0.0/0",
    "Egress": true,
    "PortRange": {
     "From": 1024,
     "To": 65535
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/WebSeverNetworkAcl/AllowEphemeralEgressResponseTrafficFromWebServer/Resource"
   }
  },
  "WebSeverNetworkAclAllowSSHFromAdminServerVpcToThePublicSubnetsOfWebServerVpcA75B9113F": {
   "Type": "AWS::EC2::NetworkAclEntry",
   "Properties": {
    "NetworkAclId": {
     "Ref": "WebSeverNetworkAcl8238AD6E"
    },
    "Protocol": 6,
    "RuleAction": "allow",
    "RuleNumber": 120,
    "CidrBlock": {
     "Fn::GetAtt": [
      "AdminServerVpcBECDD3418",
      "CidrBlock"
     ]
    },
    "Egress": false,
    "PortRange": {
     "From": 22,
     "To": 22
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/WebSeverNetworkAcl/AllowSSHFromAdminServerVpcToThePublicSubnetsOfWebServerVpcA/Resource"
   }
  },
  "WebSeverNetworkAclAllowEphemeralTrafficFromWebServerToEphemeralPortOfAdminServerF24722E8": {
   "Type": "AWS::EC2::NetworkAclEntry",
   "Properties": {
    "NetworkAclId": {
     "Ref": "WebSeverNetworkAcl8238AD6E"
    },
    "Protocol": 6,
    "RuleAction": "allow",
    "RuleNumber": 120,
    "CidrBlock": {
     "Fn::GetAtt": [
      "AdminServerVpcBECDD3418",
      "CidrBlock"
     ]
    },
    "Egress": true,
    "PortRange": {
     "From": 1024,
     "To": 65535
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/WebSeverNetworkAcl/AllowEphemeralTrafficFromWebServerToEphemeralPortOfAdminServer/Resource"
   }
  },
  "WebSeverNetworkAclAllowHttpEgressTrafficFromWebServerForDownloads29419F2A": {
   "Type": "AWS::EC2::NetworkAclEntry",
   "Properties": {
    "NetworkAclId": {
     "Ref": "WebSeverNetworkAcl8238AD6E"
    },
    "Protocol": 6,
    "RuleAction": "allow",
    "RuleNumber": 140,
    "CidrBlock": "0.0.0.0/0",
    "Egress": true,
    "PortRange": {
     "From": 80,
     "To": 80
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/WebSeverNetworkAcl/AllowHttpEgressTrafficFromWebServerForDownloads/Resource"
   }
  },
  "WebSeverNetworkAclAllowHttpsEgressTrafficFromWebServerForDownloads8B65ED03": {
   "Type": "AWS::EC2::NetworkAclEntry",
   "Properties": {
    "NetworkAclId": {
     "Ref": "WebSeverNetworkAcl8238AD6E"
    },
    "Protocol": 6,
    "RuleAction": "allow",
    "RuleNumber": 150,
    "CidrBlock": "0.0.0.0/0",
    "Egress": true,
    "PortRange": {
     "From": 443,
     "To": 443
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/WebSeverNetworkAcl/AllowHttpsEgressTrafficFromWebServerForDownloads/Resource"
   }
  },
  "WebSeverNetworkAclAllowEphemeralIngressResponseTrafficFromInternet9CD0DD3E": {
   "Type": "AWS::EC2::NetworkAclEntry",
   "Properties": {
    "NetworkAclId": {
     "Ref": "WebSeverNetworkAcl8238AD6E"
    },
    "Protocol": 6,
    "RuleAction": "allow",
    "RuleNumber": 150,
    "CidrBlock": "0.0.0.0/0",
    "Egress": false,
    "PortRange": {
     "From": 1024,
     "To": 65535
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/WebSeverNetworkAcl/AllowEphemeralIngressResponseTrafficFromInternet/Resource"
   }
  },
  "webserverSGE614F020": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "WebServerSG",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "allowsHttpTrafficFromEverywhere",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "allowsHttpsTrafficFromEverywhere",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     },
     {
      "CidrIp": "10.20.20.0/24",
      "Description": "allowsSSHFromAdminServer",
      "FromPort": 22,
      "IpProtocol": "tcp",
      "ToPort": 22
     }
    ],
    "VpcId": {
     "Ref": "WebServerVpcA0C9DFE71"
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/webserverSG/Resource"
   }
  },
  "adminServerNetworkAcl86052E54": {
   "Type": "AWS::EC2::NetworkAcl",
   "Properties": {
    "VpcId": {
     "Ref": "AdminServerVpcBECDD3418"
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/adminServerNetworkAcl/Resource"
   }
  },
  "adminServerNetworkAclDefaultAssociationsingleStacktestAdminServerVpcBpublicSubnet108F794FC9BACCA98": {
   "Type": "AWS::EC2::SubnetNetworkAclAssociation",
   "Properties": {
    "NetworkAclId": {
     "Ref": "adminServerNetworkAcl86052E54"
    },
    "SubnetId": {
     "Ref": "AdminServerVpcBpublicSubnet1SubnetD4B59ECB"
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/adminServerNetworkAcl/DefaultAssociationsingleStacktestAdminServerVpcBpublicSubnet108F794FC/Resource"
   }
  },
  "adminServerNetworkAclDefaultAssociationsingleStacktestAdminServerVpcBpublicSubnet25978D576BA881692": {
   "Type": "AWS::EC2::SubnetNetworkAclAssociation",
   "Properties": {
    "NetworkAclId": {
     "Ref": "adminServerNetworkAcl86052E54"
    },
    "SubnetId": {
     "Ref": "AdminServerVpcBpublicSubnet2Subnet2ECB0AB3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/adminServerNetworkAcl/DefaultAssociationsingleStacktestAdminServerVpcBpublicSubnet25978D576/Resource"
   }
  },
  "adminServerNetworkAclAllowRdpIngressTrafficToAdminServerFromAdministratorOffice1BDC0E0D": {
   "Type": "AWS::EC2::NetworkAclEntry",
   "Properties": {
    "NetworkAclId": {
     "Ref": "adminServerNetworkAcl86052E54"
    },
    "Protocol": 6,
    "RuleAction": "allow",
    "RuleNumber": 100,
    "CidrBlock": "87.210.71.143/32",
    "Egress": false,
    "PortRange": {
     "From": 3389,
     "To": 3389
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/adminServerNetworkAcl/AllowRdpIngressTrafficToAdminServerFromAdministratorOffice/Resource"
   }
  },
  "adminServerNetworkAclAllowRdpEgressTrafficFromAdminServerC9DE3497": {
   "Type": "AWS::EC2::NetworkAclEntry",
   "Properties": {
    "NetworkAclId": {
     "Ref": "adminServerNetworkAcl86052E54"
    },
    "Protocol": 6,
    "RuleAction": "allow",
    "RuleNumber": 100,
    "CidrBlock": "87.210.71.143/32",
    "Egress": true,
    "PortRange": {
     "From": 1024,
     "To": 65535
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/adminServerNetworkAcl/AllowRdpEgressTrafficFromAdminServer/Resource"
   }
  },
  "adminServerNetworkAclAllowSshEgressTrafficFromAdminServerFB5C4B12": {
   "Type": "AWS::EC2::NetworkAclEntry",
   "Properties": {
    "NetworkAclId": {
     "Ref": "adminServerNetworkAcl86052E54"
    },
    "Protocol": 6,
    "RuleAction": "allow",
    "RuleNumber": 110,
    "CidrBlock": {
     "Fn::GetAtt": [
      "WebServerVpcA0C9DFE71",
      "CidrBlock"
     ]
    },
    "Egress": true,
    "PortRange": {
     "From": 22,
     "To": 22
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/adminServerNetworkAcl/AllowSshEgressTrafficFromAdminServer/Resource"
   }
  },
  "adminServerNetworkAclAllowSSHIngressTrafficFromWebServerAsResponse1632C37E": {
   "Type": "AWS::EC2::NetworkAclEntry",
   "Properties": {
    "NetworkAclId": {
     "Ref": "adminServerNetworkAcl86052E54"
    },
    "Protocol": 6,
    "RuleAction": "allow",
    "RuleNumber": 110,
    "CidrBlock": {
     "Fn::GetAtt": [
      "WebServerVpcA0C9DFE71",
      "CidrBlock"
     ]
    },
    "Egress": false,
    "PortRange": {
     "From": 1024,
     "To": 65535
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/adminServerNetworkAcl/AllowSSHIngressTrafficFromWebServerAsResponse/Resource"
   }
  },
  "adminServerSG1C04FFE8": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "AdminServerSG",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "87.210.71.143/32",
      "Description": "allowsRdpTrafficFromAdministratorHomeOrOfficeOnly",
      "FromPort": 3389,
      "IpProtocol": "tcp",
      "ToPort": 3389
     },
     {
      "CidrIp": "87.210.71.143/32",
      "Description": "allowsSSHTrafficFromAdministratorHomeOrOfficeOnly",
      "FromPort": 22,
      "IpProtocol": "tcp",
      "ToPort": 22
     }
    ],
    "VpcId": {
     "Ref": "AdminServerVpcBECDD3418"
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/adminServerSG/Resource"
   }
  },
  "WebServerKeyPair": {
   "Type": "AWS::EC2::KeyPair",
   "Properties": {
    "KeyName": "webServerKeyPair1234",
    "Tags": [
     {
      "Key": "Name",
      "Value": "WebServerKeyPair"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/WebServerKeyPair"
   }
  },
  "webServerEBSVolKeyEA9F0569": {
   "Type": "AWS::KMS::Key",
   "Properties": {
    "KeyPolicy": {
     "Statement": [
      {
       "Action": "kms:*",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":root"
          ]
         ]
        }
       },
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "EnableKeyRotation": true
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "singleStack-test/webServerEBSVolKey/Resource"
   }
  },
  "webServerEBSVolKeyAlias469F9370": {
   "Type": "AWS::KMS::Alias",
   "Properties": {
    "AliasName": "alias/webServerEBSEncryptionKey",
    "TargetKeyId": {
     "Fn::GetAtt": [
      "webServerEBSVolKeyEA9F0569",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/webServerEBSVolKey/Alias/Resource"
   }
  },
  "WebServerInstanceRoleEEE3F4CD": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "singleStack-test/WebServer"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/WebServer/InstanceRole/Resource"
   }
  },
  "WebServerInstanceRoleDefaultPolicy30CD8714": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "WebServerInstanceRoleDefaultPolicy30CD8714",
    "Roles": [
     {
      "Ref": "WebServerInstanceRoleEEE3F4CD"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/WebServer/InstanceRole/DefaultPolicy/Resource"
   }
  },
  "WebServerInstanceProfile7A5DA8F6": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "WebServerInstanceRoleEEE3F4CD"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/WebServer/InstanceProfile"
   }
  },
  "WebServer99EDD300": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": "eu-central-1a",
    "BlockDeviceMappings": [
     {
      "DeviceName": "/dev/xvda",
      "Ebs": {
       "DeleteOnTermination": true,
       "Encrypted": true,
       "KmsKeyId": {
        "Fn::GetAtt": [
         "webServerEBSVolKeyEA9F0569",
         "Arn"
        ]
       },
       "VolumeSize": 8
      }
     }
    ],
    "IamInstanceProfile": {
     "Ref": "WebServerInstanceProfile7A5DA8F6"
    },
    "ImageId": {
     "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "InstanceType": "t2.micro",
    "KeyName": "webServerKeyPair1234",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "webserverSGE614F020",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "WebServerVpcApublicSubnet1SubnetC50EEEC8"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "singleStack-test/WebServer"
     }
    ],
    "UserData": {
     "Fn::Base64": {
      "Fn::Join": [
       "",
       [
        "#!/bin/bash\nmkdir -p $(dirname '/tmp/a9efec938da9fd13e6eed3395deeed74d556c6edda2fd72ef6337f7b8aff423a.sh')\naws s3 cp 's3://",
        {
         "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
        },
        "/a9efec938da9fd13e6eed3395deeed74d556c6edda2fd72ef6337f7b8aff423a.sh' '/tmp/a9efec938da9fd13e6eed3395deeed74d556c6edda2fd72ef6337f7b8aff423a.sh'\nset -e\nchmod +x '/tmp/a9efec938da9fd13e6eed3395deeed74d556c6edda2fd72ef6337f7b8aff423a.sh'\n'/tmp/a9efec938da9fd13e6eed3395deeed74d556c6edda2fd72ef6337f7b8aff423a.sh'"
       ]
      ]
     }
    }
   },
   "DependsOn": [
    "WebServerInstanceRoleDefaultPolicy30CD8714",
    "WebServerInstanceRoleEEE3F4CD"
   ],
   "Metadata": {
    "aws:cdk:path": "singleStack-test/WebServer/Resource"
   }
  },
  "AdminServerKeyPair": {
   "Type": "AWS::EC2::KeyPair",
   "Properties": {
    "KeyName": "adminServerKeyPair1234",
    "Tags": [
     {
      "Key": "Name",
      "Value": "AdminServerKeyPair"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/AdminServerKeyPair"
   }
  },
  "adminServerEBSVolKeyA06EAFCA": {
   "Type": "AWS::KMS::Key",
   "Properties": {
    "KeyPolicy": {
     "Statement": [
      {
       "Action": "kms:*",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":root"
          ]
         ]
        }
       },
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "EnableKeyRotation": true
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "singleStack-test/adminServerEBSVolKey/Resource"
   }
  },
  "adminServerEBSVolKeyAlias0AC94F04": {
   "Type": "AWS::KMS::Alias",
   "Properties": {
    "AliasName": "alias/adminServerEBSEncryptionKey",
    "TargetKeyId": {
     "Fn::GetAtt": [
      "adminServerEBSVolKeyA06EAFCA",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/adminServerEBSVolKey/Alias/Resource"
   }
  },
  "AdminServerInstanceRole2DCE370B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "singleStack-test/AdminServer"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/AdminServer/InstanceRole/Resource"
   }
  },
  "AdminServerInstanceProfile39C00340": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "AdminServerInstanceRole2DCE370B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/AdminServer/InstanceProfile"
   }
  },
  "AdminServer61AB9504": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": "eu-central-1b",
    "BlockDeviceMappings": [
     {
      "DeviceName": "/dev/sda1",
      "Ebs": {
       "DeleteOnTermination": true,
       "Encrypted": true,
       "KmsKeyId": {
        "Fn::GetAtt": [
         "adminServerEBSVolKeyA06EAFCA",
         "Arn"
        ]
       },
       "VolumeSize": 30
      }
     }
    ],
    "IamInstanceProfile": {
     "Ref": "AdminServerInstanceProfile39C00340"
    },
    "ImageId": {
     "Ref": "SsmParameterValueawsserviceamiwindowslatestWindowsServer2022EnglishFullBaseC96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "InstanceType": "t2.micro",
    "KeyName": "adminServerKeyPair1234",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "adminServerSG1C04FFE8",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "AdminServerVpcBpublicSubnet2Subnet2ECB0AB3"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "singleStack-test/AdminServer"
     }
    ],
    "UserData": {
     "Fn::Base64": "<powershell></powershell>"
    }
   },
   "DependsOn": [
    "AdminServerInstanceRole2DCE370B"
   ],
   "Metadata": {
    "aws:cdk:path": "singleStack-test/AdminServer/Resource"
   }
  },
  "VpcAtoVpcB": {
   "Type": "AWS::EC2::VPCPeeringConnection",
   "Properties": {
    "PeerVpcId": {
     "Ref": "WebServerVpcA0C9DFE71"
    },
    "VpcId": {
     "Ref": "AdminServerVpcBECDD3418"
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/VpcAtoVpcB"
   }
  },
  "RouteFromPublicSubnetOfWebServerVpcAToPublicSubnetOfAdminServerVpcB": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "WebServerVpcApublicSubnet1RouteTable273F23E7"
    },
    "DestinationCidrBlock": "10.20.20.128/25",
    "VpcPeeringConnectionId": {
     "Ref": "VpcAtoVpcB"
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/RouteFromPublicSubnetOfWebServerVpcAToPublicSubnetOfAdminServerVpcB"
   }
  },
  "RouteFromPublicSubnetOfAdminServerVpcBToPublicSubnetOfWebServerVpcA": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "AdminServerVpcBpublicSubnet2RouteTable552E22BD"
    },
    "DestinationCidrBlock": "10.10.10.0/25",
    "VpcPeeringConnectionId": {
     "Ref": "VpcAtoVpcB"
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/RouteFromPublicSubnetOfAdminServerVpcBToPublicSubnetOfWebServerVpcA"
   }
  },
  "ServerVaultKeyA1671AC3": {
   "Type": "AWS::KMS::Key",
   "Properties": {
    "KeyPolicy": {
     "Statement": [
      {
       "Action": "kms:*",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":root"
          ]
         ]
        }
       },
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "EnableKeyRotation": true
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "singleStack-test/ServerVaultKey/Resource"
   }
  },
  "ServerVaultKeyAlias400F5F87": {
   "Type": "AWS::KMS::Alias",
   "Properties": {
    "AliasName": "alias/ServerBackUpVaultEncryptionKey",
    "TargetKeyId": {
     "Fn::GetAtt": [
      "ServerVaultKeyA1671AC3",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/ServerVaultKey/Alias/Resource"
   }
  },
  "ServerBackUpVault535F5727": {
   "Type": "AWS::Backup::BackupVault",
   "Properties": {
    "BackupVaultName": "BackUpVaultServer",
    "EncryptionKeyArn": {
     "Fn::GetAtt": [
      "ServerVaultKeyA1671AC3",
      "Arn"
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "singleStack-test/ServerBackUpVault/Resource"
   }
  },
  "BackUpPlanServerB3045F24": {
   "Type": "AWS::Backup::BackupPlan",
   "Properties": {
    "BackupPlan": {
     "BackupPlanName": "serverBackUpPlan",
     "BackupPlanRule": [
      {
       "Lifecycle": {
        "DeleteAfterDays": 7
       },
       "RuleName": "BackUpRuleServer",
       "ScheduleExpression": "cron(0 5 ? * * *)",
       "TargetBackupVault": {
        "Fn::GetAtt": [
         "ServerBackUpVault535F5727",
         "BackupVaultName"
        ]
       }
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/BackUpPlanServer/Resource"
   }
  },
  "BackUpPlanServerServersSelectionRole1FBEC233": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "backup.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSBackupServiceRolePolicyForBackup"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/BackUpPlanServer/Servers-Selection/Role/Resource"
   }
  },
  "BackUpPlanServerServersSelectionBCB3C339": {
   "Type": "AWS::Backup::BackupSelection",
   "Properties": {
    "BackupPlanId": {
     "Fn::GetAtt": [
      "BackUpPlanServerB3045F24",
      "BackupPlanId"
     ]
    },
    "BackupSelection": {
     "IamRoleArn": {
      "Fn::GetAtt": [
       "BackUpPlanServerServersSelectionRole1FBEC233",
       "Arn"
      ]
     },
     "Resources": [
      {
       "Fn::Join": [
        "",
        [
         "arn:",
         {
          "Ref": "AWS::Partition"
         },
         ":ec2:",
         {
          "Ref": "AWS::Region"
         },
         ":",
         {
          "Ref": "AWS::AccountId"
         },
         ":instance/",
         {
          "Ref": "WebServer99EDD300"
         }
        ]
       ]
      },
      {
       "Fn::Join": [
        "",
        [
         "arn:",
         {
          "Ref": "AWS::Partition"
         },
         ":ec2:",
         {
          "Ref": "AWS::Region"
         },
         ":",
         {
          "Ref": "AWS::AccountId"
         },
         ":instance/",
         {
          "Ref": "AdminServer61AB9504"
         }
        ]
       ]
      }
     ],
     "SelectionName": "Servers-Selection"
    }
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/BackUpPlanServer/Servers-Selection/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31SwW7CMAz9Fu4hY6BJuxY0ITRpitqJK0qDgaxpghJHqKr670uTjrAddvJ7z65fbHdJX1Z0MeM3NxfHZq5kTfsKuWhIkA49iCXt91dBNie9ZxvCfK2kqHytAUcto9J4hE9eK8h61grnjJAcpdH34hHsNIINlVuOcOPdZDOxAsNDLi1oJB+AN2ObQqix5IEloyz8MfovndU3jbb73ThJFQhvJXZba/w19vsrvEPHuLRkpx1yLaahMg7TMAAr9XljtAYxOg+kaR3tw6dTB1Ioyd1IIhiI5C3tS5N2GSMzYe+xPqMfH2bNSSoYiFsduHOAjhZjCJyuvWgA19wBqcNV/ZX26xj33Kt4uEeaMFNc50xkCVag0gQ5e5eGgZTgjLdpbsYtbyEcl8SnhF/qHHYQx3moCjs5yrQS1uHF6KcVfV7Q19mXk3JuvUbZAi1T/AZM2haFqwIAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "singleStack-test/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Parameters": {
  "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
   "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
  },
  "SsmParameterValueawsserviceamiwindowslatestWindowsServer2022EnglishFullBaseC96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
   "Default": "/aws/service/ami-windows-latest/Windows_Server-2022-English-Full-Base"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}